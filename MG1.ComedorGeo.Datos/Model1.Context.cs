//------------------------------------------------------------------------------
// <auto-generated>
//    Este código se generó a partir de una plantilla.
//
//    Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//    Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MG1.ComedorGeo.Datos
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class dbAlimentacionGeoEntities : DbContext
    {
        public dbAlimentacionGeoEntities()
            : base("name=dbAlimentacionGeoEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<Alimento> Alimento { get; set; }
        public DbSet<Area> Area { get; set; }
        public DbSet<Bitacora> Bitacora { get; set; }
        public DbSet<Cargo> Cargo { get; set; }
        public DbSet<CentroCosto> CentroCosto { get; set; }
        public DbSet<DetalleAlimento> DetalleAlimento { get; set; }
        public DbSet<DetalleEstado> DetalleEstado { get; set; }
        public DbSet<DetalleEstadoServicio> DetalleEstadoServicio { get; set; }
        public DbSet<DetalleProgramacion> DetalleProgramacion { get; set; }
        public DbSet<Empleado> Empleado { get; set; }
        public DbSet<Empresa> Empresa { get; set; }
        public DbSet<Estado> Estado { get; set; }
        public DbSet<EstadoEmpleado> EstadoEmpleado { get; set; }
        public DbSet<Grupo> Grupo { get; set; }
        public DbSet<GrupoPerfil> GrupoPerfil { get; set; }
        public DbSet<Ingrediente> Ingrediente { get; set; }
        public DbSet<Menu> Menu { get; set; }
        public DbSet<OrdenServicio> OrdenServicio { get; set; }
        public DbSet<Perfil> Perfil { get; set; }
        public DbSet<Persona> Persona { get; set; }
        public DbSet<Programacion> Programacion { get; set; }
        public DbSet<RepresentanteLegal> RepresentanteLegal { get; set; }
        public DbSet<Rubro> Rubro { get; set; }
        public DbSet<TBResumenAlimentacion> TBResumenAlimentacion { get; set; }
        public DbSet<Tipo> Tipo { get; set; }
        public DbSet<TipoAlimento> TipoAlimento { get; set; }
        public DbSet<TipoEmpresa> TipoEmpresa { get; set; }
        public DbSet<Turno> Turno { get; set; }
        public DbSet<Usuario> Usuario { get; set; }
        public DbSet<VCentroCosto> VCentroCosto { get; set; }
        public DbSet<VDetalleEstadoServicio> VDetalleEstadoServicio { get; set; }
        public DbSet<VDetalleProgramacion> VDetalleProgramacion { get; set; }
        public DbSet<VEmpleado> VEmpleado { get; set; }
        public DbSet<VEmpleadoProgramacion> VEmpleadoProgramacion { get; set; }
        public DbSet<VGrupoPerfil> VGrupoPerfil { get; set; }
        public DbSet<VPerfil> VPerfil { get; set; }
        public DbSet<VAlimentoProgramacion> VAlimentoProgramacion { get; set; }
    
        public virtual int sp_ActualizarNombreCompletoCursor()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ActualizarNombreCompletoCursor");
        }
    
        public virtual int sp_ActualizarTBResumenAlimentacion()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ActualizarTBResumenAlimentacion");
        }
    
        public virtual int sp_InsertarPerfilCursor(Nullable<long> id, Nullable<long> idGrupo, Nullable<int> flag)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var idGrupoParameter = idGrupo.HasValue ?
                new ObjectParameter("idGrupo", idGrupo) :
                new ObjectParameter("idGrupo", typeof(long));
    
            var flagParameter = flag.HasValue ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertarPerfilCursor", idParameter, idGrupoParameter, flagParameter);
        }
    }
}
